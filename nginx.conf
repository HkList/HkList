server
{
    listen 80;
    server_name proxy.example.com;  # 替换为你的域名或IP地址 下面还有日志服务

    location / {
        set $decoded_url "";
        set $target_host "";

        rewrite_by_lua_block {
            local args = ngx.req.get_uri_args()
            local encode_url = args["url"]
            if not encode_url then
                return ngx.exit(400)
            end
            
            -- base64 解码
            local decoded_url = ngx.decode_base64(encode_url)
            
            -- 倒序字符串
            local reverse_url = decoded_url:reverse()
            
            -- 解码
            local url = ngx.unescape_uri(reverse_url)
            
            decoded_url = url
            target_host = url:match("^https?://([^/]+)")
            
            if not target_host:match("^[a-zA-Z0-9.-]+%.baidupcs%.com$") then
                return ngx.exit(403)
            end
            
            ngx.var.decoded_url = decoded_url
            ngx.var.target_host = target_host
        }

        resolver 8.8.8.8 1.1.1.1 valid=300s;
        proxy_pass $decoded_url;
        proxy_ssl_server_name on;
        proxy_set_header Host $target_host;
        proxy_set_header User-Agent $http_user_agent;

        proxy_set_header X-Real-IP "";
        proxy_set_header X-Forwarded-For "";
        proxy_set_header Connection "";
        proxy_set_header Cookie "";

        proxy_cache off;
    }
    
    # 错误日志
    # access_log  /www/wwwlogs/proxy.example.com.log;
    # error_log  /www/wwwlogs/proxy.example.com.log;
}